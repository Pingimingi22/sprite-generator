# data file for the Fltk User Interface Designer (fluid)
version 1.0400
header_name {MyCubeViewUI.h}
code_name {MyCubeViewUI.cxx}
class MyCubeViewUI {open
} {
  Function {show(int argc, char **argv)} {open
  } {
    code {window->show(argc, argv);} {}
  }
  Function {MyCubeViewUI()} {
    comment test open
  } {
    Fl_Window window {open
      xywh {1973 69 991 696} type Double hide
    } {
      Fl_Group {} {open
        xywh {0 0 991 72}
      } {
        Fl_Box {} {
          label {Sprite Generator}
          xywh {1 0 990 72} labelfont 7 labelsize 30 align 128
        }
      }
      Fl_Group {} {open selected
        xywh {15 89 958 592} box UP_FRAME
      } {
        Fl_Box cube {
          label {opengl context}
          xywh {349 166 256 256}
          code0 {\#include "SimpleGL3Window.h"}
          code1 {cube->uiStuff = this;}
          class SimpleGL3Window
        }
        Fl_Button {} {
          label {Take screenshot}
          callback {cube->WriteToImage();}
          xywh {362 647 208 24}
        }
        Fl_Choice {} {
          label {Number of directions}
          xywh {510 610 56 24} down_box BORDER_BOX
        } {
          MenuItem {} {
            label 8
            callback {cube->directionsToCapture = 8;}
            xywh {0 0 100 20}
          }
          MenuItem {} {
            label 16
            callback {cube->directionsToCapture = 16;}
            xywh {0 0 100 20}
          }
          MenuItem {} {
            label 32
            callback {cube->directionsToCapture = 32;}
            xywh {0 0 100 20}
          }
          MenuItem {} {
            label 64
            callback {cube->directionsToCapture = 64;}
            xywh {0 0 100 20}
          }
          MenuItem {} {
            label 128
            callback {cube->directionsToCapture = 128;}
            xywh {0 0 100 20}
          }
        }
        Fl_Value_Slider rotationSliderY {
          label {Rotate model y}
          callback {cube->rotationAngle = ((Fl_Slider*)o)->value();}
          xywh {25 596 198 22} type {Horz Knob} maximum 360 step 1 textsize 14
        }
        Fl_Value_Slider rotationSliderZ {
          label {Rotate model z}
          callback {cube->rotationAngle = ((Fl_Slider*)o)->value();}
          xywh {25 633 198 22} type {Horz Knob} maximum 360 step 1 textsize 14
        }
        Fl_Value_Slider rotationSliderX {
          label {Rotate model x}
          callback {cube->verticalRotationAngle = ((Fl_Slider*)o)->value();}
          xywh {25 558 198 24} type {Horz Knob} maximum 360 step 1 textsize 14
        }
        Fl_Tree meshTree {
          xywh {801 107 156 304}
        }
        Fl_Group {} {
          xywh {688 439 275 232}
        } {
          Fl_Slider cubeScaleSlider {
            label {cube scale}
            callback {cube->cubeScale = ((Fl_Slider*)o)->value();}
            xywh {701 633 256 24} type {Horz Knob} minimum -100 maximum 100 step 0.01 value 1
          }
          Fl_Value_Slider {} {
            label scale
            callback {cube->zScale = ((Fl_Slider*)o)->value();}
            xywh {701 543 256 24} type {Horz Knob} textsize 14
          }
          Fl_Value_Slider {} {
            label offset
            callback {cube->zOffset = ((Fl_Slider*)o)->value();}
            xywh {701 586 256 24} type {Horz Knob} minimum -50 maximum 50 textsize 14
          }
          Fl_Value_Slider {} {
            label {camera zoom}
            callback {cube->cameraZoom = ((Fl_Slider*)o)->value();}
            xywh {701 454 256 24} type Horizontal minimum -25 maximum 25 value -5 textsize 14
          }
          Fl_Value_Slider {} {
            label {ortho size}
            callback {cube->orthoSize = ((Fl_Slider*)o)->value();}
            xywh {701 497 256 24} type {Horz Knob} minimum -100 maximum 100 value 5 textsize 14
          }
        }
        Fl_Choice {} {
          label {Sprite size}
          xywh {446 546 120 24} down_box BORDER_BOX
        } {
          MenuItem {} {
            label 512x512
            xywh {20 20 100 20}
          }
          MenuItem {} {
            label 128x128
            xywh {20 20 100 20}
          }
          MenuItem {} {
            label 64x64
            xywh {30 30 100 20}
          }
        }
        Fl_Choice {} {
          label Shader open
          xywh {422 578 144 24} down_box BORDER_BOX
        } {
          MenuItem {} {
            label {Gouraud shading}
            callback {cube->ActivateGouraud();}
            xywh {0 0 100 20}
          }
          MenuItem {} {
            label Unlit
            callback {cube->ActivateUnlit();}
            xywh {0 0 100 20}
          }
        }
      }
    }
  }
}
